import type { NextPage } from 'next';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Image from 'next/image';
import HeroSection from '../../components/image-box/HeroSection';
import HeroRow from '../../components/image-box/HeroRow';
import ContactForm from '../../components/contact/contact-form';
import EventsSearch from '../../components/posts-search/EventsSearch';
import styles from '../../styles/Home.module.css';
import { getFilteredPosts } from '../../lib/post-util';
import { ReactNode } from 'react';

interface HeroRendererable {
  imageUrl: string;
  title: string;
  excerpt: string;
  row: number;
  index: number;
  slug: string;
}

const HomeFiltered: NextPage = ({ posts, tags }: any) => {
  const router = useRouter();
  const filterValue = router.query.slug![0] || 'all';

  const onSearch = (tag: string) => {
    const fullPath = `${tag}`;
    router.replace(fullPath);
  };

  const renderHeroSections = (sections: HeroRendererable[]) =>
    sections.map((section): ReactNode => {
      return (
        <HeroSection
          title={section.title}
          imageName={section.imageUrl}
          excerpt={section.excerpt}
          slug={section.slug}
          key={`hero-post-${section.slug}`}
        />
      );
    });
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <>
          <EventsSearch
            filterValue={filterValue}
            tags={tags}
            onSearch={onSearch}
          />
          {posts.map((row: HeroRendererable[]): any => {
            return (
              <HeroRow key={`hero-row-${row[0]['row']}`}>
                {renderHeroSections(row)}
              </HeroRow>
            );
          })}
        </>
        <HeroRow>
          <ContactForm />
        </HeroRow>
      </main>
    </div>
  );
};

export async function getServerSideProps({ query }: any) {
  const allPosts = await getFilteredPosts(query.slug[0]);

  return {
    props: {
      posts: allPosts.posts,
      tags: allPosts.tags,
    },
  };
}

export default HomeFiltered;
